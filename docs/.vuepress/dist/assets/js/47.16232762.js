(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{404:function(t,a,s){"use strict";s.r(a);var e=s(44),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"浏览器缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存机制"}},[t._v("#")]),t._v(" 浏览器缓存机制")]),t._v(" "),s("h2",{attrs:{id:"缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),s("p",[t._v("《图解 HTTP》一书中说：缓存是指代理服务器或者客户端本地磁盘内保存的资源副本，利用缓存可减少对服务器的访问")]),t._v(" "),s("p",[t._v("说的稍微通俗一点，浏览器缓存就是把一个已经请求过的 "),s("code",[t._v("Web")]),t._v(" 资源拷贝一份副本储存在浏览器中，缓存会根据进来的请求保存输出内容的副本，当下一个请求来到的时候，如果是相同的 "),s("code",[t._v("URL")]),t._v("，缓存会根据缓存机制决定是直接使用副本响应访问请求，还是向源服务器再次发送请求")]),t._v(" "),s("p",[t._v("缓存的优点：")]),t._v(" "),s("ul",[s("li",[t._v("节省通信流量")]),t._v(" "),s("li",[t._v("减少通信时间")]),t._v(" "),s("li",[t._v("降低服务器压力")])]),t._v(" "),s("p",[t._v("浏览器第一次向服务器发起该请求后拿到请求结果后，将请求结果和缓存标识存入浏览器缓存，浏览器对于缓存的处理是根据第一次请求资源时返回的响应头来确定的，"),s("strong",[t._v("浏览器每次发起请求，都会先在浏览器缓存中查找该请求的结果以及缓存标识，浏览器每次拿到返回的请求结果都会将该结果和缓存标识存入浏览器缓存中")])]),t._v(" "),s("h2",{attrs:{id:"缓存分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存分类"}},[t._v("#")]),t._v(" 缓存分类")]),t._v(" "),s("p",[t._v("缓存也是有好几种的，从缓存的位置上来说分为四种：")]),t._v(" "),s("ul",[s("li",[t._v("Service Worker")]),t._v(" "),s("li",[t._v("Memory Cache")]),t._v(" "),s("li",[t._v("Disk Cache")]),t._v(" "),s("li",[t._v("Push Cache")])]),t._v(" "),s("p",[t._v("这四种缓存各自有优先级，当依次查找缓存且都没有命中的时候，才会去请求网络")]),t._v(" "),s("h3",{attrs:{id:"service-worker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#service-worker"}},[t._v("#")]),t._v(" Service Worker")]),t._v(" "),s("p",[t._v("它是运行在浏览器背后的独立线程，使用它的前提是网络传输协议必须是 "),s("code",[t._v("HTTPS")]),t._v("，原因是 "),s("code",[t._v("Service Worker")]),t._v(" 中涉及到请求拦截，所以使用 "),s("code",[t._v("HTTPS")]),t._v(" 可以保障安全")]),t._v(" "),s("p",[t._v("用 "),s("code",[t._v("Service Worker")]),t._v(" 实现缓存机制需要先注册 "),s("code",[t._v("Service Worker")]),t._v("，监听到 "),s("code",[t._v("Service Worker")]),t._v(" 状态为 "),s("code",[t._v("installing")]),t._v(" 后就可以缓存需要的文件了")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"serviceWorker"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 验证浏览器是否支持Service Worker")]),t._v("\n  navigator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("serviceWorker\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./sw-demo-cache.js"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注册Service Worker")]),t._v("\n      scope"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("registration")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" serviceWorker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 监听Service Worker状态")]),t._v("\n        serviceWorker "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" registration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("installing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[s("code",[t._v("Service Worker")]),t._v(" 的状态（生命周期）如下：")]),t._v(" "),s("p",[t._v("installing → installed → activating → activated")]),t._v(" "),s("h3",{attrs:{id:"memory-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#memory-cache"}},[t._v("#")]),t._v(" Memory Cache")]),t._v(" "),s("p",[t._v("它是内存中的缓存，主要包含的是当前中页面中已经抓取到的资源,例如页面上已经下载的样式、脚本、图片等，内存中的缓存读取速度比硬盘缓存快得多，但是内存中的缓存属于临时缓存，当我们关闭页面，缓存自然就没了")]),t._v(" "),s("p",[t._v("内存缓存中的 "),s("code",[t._v("preloader")]),t._v(" 是页面优化的常见手段之一")]),t._v(" "),s("p",[s("code",[t._v("preloader")]),t._v("可以实现响应式加载资源，如：")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("image"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("map.png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("media")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("(max-width: 600px)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("preload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("script"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("map.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("media")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("(min-width: 601px)"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[t._v("它可以一边解析 "),s("code",[t._v("js/css")]),t._v(" 文件，一边网络请求下一个资源")]),t._v(" "),s("p",[t._v("需要注意的事情是，内存缓存在缓存资源时并不关心返回资源的 "),s("code",[t._v("HTTP")]),t._v(" 缓存头 "),s("code",[t._v("Cache-Control")]),t._v(" 是什么值，同时资源的匹配也并非仅仅是对 "),s("code",[t._v("URL")]),t._v(" 做匹配，还可能会对 "),s("code",[t._v("Content-Type")]),t._v("，"),s("code",[t._v("CORS")]),t._v(" 等其他特征做校验")]),t._v(" "),s("h3",{attrs:{id:"disk-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#disk-cache"}},[t._v("#")]),t._v(" Disk Cache")]),t._v(" "),s("p",[s("code",[t._v("Disk Cache")]),t._v(" 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，且储存时间比内存缓存长的多")]),t._v(" "),s("p",[t._v("它会根据 "),s("code",[t._v("HTTP Herder")]),t._v(" 中的字段判断哪些资源需要缓存，哪些资源可以不请求直接使用，哪些资源已经过期需要重新请求。并且即使在跨站点的情况下，相同地址的资源一旦被硬盘缓存下来，就不会再次去请求数据，绝大部分缓存都来自硬盘缓存")]),t._v(" "),s("p",[t._v("浏览器会根据情况选择将文件存储在内存还是硬盘中，对于大文件来说，大概率是不存储在内存中的，反之优先，当前系统内存使用率高的话，文件优先存储进硬盘")]),t._v(" "),s("h3",{attrs:{id:"push-cache"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push-cache"}},[t._v("#")]),t._v(" Push Cache")]),t._v(" "),s("p",[s("code",[t._v("Push Cache")]),t._v("（推送缓存）是 "),s("code",[t._v("HTTP/2")]),t._v(" 中的内容，当以上三种缓存都没有命中时，它才会被使用。它只在会话（Session）中存在，一旦会话结束就被释放，并且缓存时间也很短暂，在 "),s("code",[t._v("Chrome")]),t._v(" 浏览器中只有 5 分钟左右，同时它也并非严格执行 "),s("code",[t._v("HTTP")]),t._v(" 头中的缓存指令")]),t._v(" "),s("h2",{attrs:{id:"缓存过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存过程"}},[t._v("#")]),t._v(" 缓存过程")]),t._v(" "),s("p",[s("code",[t._v("HTTP")]),t._v(" 请求将缓存过程分为两个部分，分别是强缓存和协商缓存")]),t._v(" "),s("h3",{attrs:{id:"强缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),s("p",[t._v("不会向服务器发送请求，直接从缓存中读取资源，在 "),s("code",[t._v("chrome")]),t._v(" 控制台的 "),s("code",[t._v("Network")]),t._v(" 选项中可以看到该请求返回 200 的状态码，并且 "),s("code",[t._v("Size")]),t._v(" 显示 "),s("code",[t._v("from disk cache")]),t._v(" 或 "),s("code",[t._v("from memory cache")]),t._v("，强缓存可以通过设置两种 "),s("code",[t._v("HTTP Header")]),t._v(" 实现："),s("code",[t._v("Expires")]),t._v(" 和 "),s("code",[t._v("Cache-Control")])]),t._v(" "),s("h4",{attrs:{id:"expires"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#expires"}},[t._v("#")]),t._v(" Expires")]),t._v(" "),s("p",[s("code",[t._v("Expires")]),t._v(" 是 "),s("code",[t._v("HTTP/1")]),t._v(" 的产物，受限于本地时间，如果修改了本地时间，可能会造成缓存失效，"),s("code",[t._v("Expires: Wed, 22 Oct 2018 08:41:00 GMT")]),t._v(" 表示资源会在 "),s("code",[t._v("Wed, 22 Oct 2018 08:41:00 GMT")]),t._v(" 后过期，需要再次请求")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cookie "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("clr=red; expires=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("expiresDate"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h4",{attrs:{id:"cache-control"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("HTTP/1.1")]),t._v(" 中，"),s("code",[t._v("Cache-Control")]),t._v(" 是最重要的规则，主要用于控制网页缓存。比如当 "),s("code",[t._v("Cache-Control:max-age=300")]),t._v(" 时，则代表在这个请求正确返回时间（浏览器也会记录下来）的 5 分钟内再次加载资源，就会命中强缓存。")]),t._v(" "),s("p",[s("code",[t._v("Cache-Control")]),t._v(" 常见的取值有 "),s("code",[t._v("public")]),t._v("、"),s("code",[t._v("private")]),t._v("、"),s("code",[t._v("no-cache")]),t._v("、"),s("code",[t._v("max-age")]),t._v(" 等，默认为 "),s("code",[t._v("private")])]),t._v(" "),s("ul",[s("li",[t._v("public：所有内容都将被缓存（客户端和代理服务器都可缓存）")]),t._v(" "),s("li",[t._v("private：所有内容只有客户端可以缓存")]),t._v(" "),s("li",[t._v("no-cache：客户端缓存内容，是否使用缓存则需要经过协商缓存来验证决定")]),t._v(" "),s("li",[t._v("max-age：max-age=xxx (xxx is numeric)表示缓存内容将在 xxx 秒后失效")]),t._v(" "),s("li",[t._v("no-store：所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存")]),t._v(" "),s("li",[t._v("s-maxage（单位为 s)：同 max-age 作用一样，只在代理服务器中生效（比如 CDN 缓存）")])]),t._v(" "),s("p",[t._v("两者同时存在的话，"),s("code",[t._v("Cache-Control")]),t._v(" 优先级高于 "),s("code",[t._v("Expires")])]),t._v(" "),s("h3",{attrs:{id:"协商缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),s("p",[t._v("协商缓存就是强制缓存失效后，浏览器携带缓存标识向服务器发起请求，由服务器根据缓存标识决定是否使用缓存的过程")]),t._v(" "),s("p",[t._v("协商缓存可以通过设置两种 "),s("code",[t._v("HTTP Header")]),t._v(" 实现："),s("code",[t._v("Last-Modified")]),t._v(" 和 "),s("code",[t._v("ETag")])]),t._v(" "),s("h4",{attrs:{id:"last-modified"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified"}},[t._v("#")]),t._v(" Last-Modified")]),t._v(" "),s("p",[t._v("浏览器在第一次访问资源时，服务器返回资源的同时，在 "),s("code",[t._v("response header")]),t._v(" 中添加 "),s("code",[t._v("Last-Modified")]),t._v(" 的 "),s("code",[t._v("header")]),t._v("，值是这个资源在服务器上的最后修改时间，浏览器接收后缓存文件和 "),s("code",[t._v("header")])]),t._v(" "),s("p",[s("code",[t._v("Last-Modified: Fri, 22 Jul 2016 01:47:00 GMT")])]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ul",[s("li",[t._v("如果本地打开缓存文件，即使没有对文件进行修改，但还是会造成 "),s("code",[t._v("Last-Modified")]),t._v(" 被修改，服务端不能命中缓存导致发送相同的资源")]),t._v(" "),s("li",[t._v("因为 "),s("code",[t._v("Last-Modified")]),t._v(" 只能以秒计时，如果在不可感知的时间内修改完成文件，那么服务端会认为资源还是命中了，不会返回正确的资源")])]),t._v(" "),s("h4",{attrs:{id:"etag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag"}},[t._v("#")]),t._v(" ETag")]),t._v(" "),s("p",[s("code",[t._v("Etag")]),t._v(" 是服务器响应请求时，返回当前资源文件的一个唯一标识(由服务器生成)，只要资源有变化，"),s("code",[t._v("Etag")]),t._v(" 就会重新生成")]),t._v(" "),s("p",[t._v("在精确度上，"),s("code",[t._v("Etag")]),t._v(" 要优于 "),s("code",[t._v("Last-Modified")]),t._v("\n在性能上，"),s("code",[t._v("Etag")]),t._v(" 要逊于 "),s("code",[t._v("Last-Modified")]),t._v("\n在优先级上，服务器校验优先考虑 "),s("code",[t._v("Etag")])]),t._v(" "),s("h2",{attrs:{id:"缓存机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),s("p",[t._v("强制缓存优先于协商缓存进行，若强制缓存("),s("code",[t._v("Expires")]),t._v(" 和 "),s("code",[t._v("Cache-Control")]),t._v(")生效则直接使用缓存，若不生效则进行协商缓存("),s("code",[t._v("Last-Modified")]),t._v(" / "),s("code",[t._v("If-Modified-Since")]),t._v(" 和 "),s("code",[t._v("Etag")]),t._v(" / "),s("code",[t._v("If-None-Match")]),t._v(")，协商缓存由服务器决定是否使用缓存，若协商缓存失效，那么代表该请求的缓存失效，返回 200，重新返回资源和缓存标识，再存入浏览器缓存中；生效则返回 304，继续使用缓存")]),t._v(" "),s("h2",{attrs:{id:"用户行为对浏览器缓存的影响"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#用户行为对浏览器缓存的影响"}},[t._v("#")]),t._v(" 用户行为对浏览器缓存的影响")]),t._v(" "),s("ul",[s("li",[t._v("打开网页，地址栏输入地址： 查找 disk cache 中是否有匹配。如有则使用；如没有则发送网络请求")]),t._v(" "),s("li",[t._v("普通刷新 (F5)：因为 TAB 并没有关闭，因此 memory cache 是可用的，会被优先使用(如果匹配的话)。其次才是 disk cache")]),t._v(" "),s("li",[t._v("强制刷新 (Ctrl + F5)：浏览器不使用缓存，因此发送的请求头部均带有 Cache-control: no-cache(为了兼容，还带了 Pragma: no-cache),服务器直接返回 200 和最新内容")])])])}),[],!1,null,null,null);a.default=n.exports}}]);