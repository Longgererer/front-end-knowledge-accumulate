(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{379:function(t,s,n){"use strict";n.r(s);var a=n(44),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"generator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" Generator")]),t._v(" "),n("h2",{attrs:{id:"generator-基本用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generator-基本用法"}},[t._v("#")]),t._v(" Generator 基本用法")]),t._v(" "),n("p",[t._v("Promise 解决了异步嵌套的问题，ES6 又推出了 Generator 函数，这是一个新的函数类型，也叫做"),n("strong",[t._v("生成器")]),t._v("。")]),t._v(" "),n("p",[t._v("来看例子：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("输出结果是什么？毫无疑问会是 3。")]),t._v(" "),n("p",[t._v("如果我把 b() 这条调用函数 b 的行为取消，那结果应该是 2，有没有方法可以做到在取消调用函数 b 之后，仍然可以得到 3 的结果呢？")]),t._v(" "),n("p",[t._v("答案就是："),n("strong",[t._v("Generator")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("blockquote",[n("p",[t._v("可以看到 Generator 函数的声明相比普通函数多了一个*,当然也可以写成"),n("code",[t._v("function *a()")]),t._v("，"),n("code",[t._v("function * a()")]),t._v("甚至是"),n("code",[t._v("function*a()")]),t._v("，这几种写法没有本质上的区别，只是风格的不同而已。")])]),t._v(" "),n("p",[t._v("函数里有一个"),n("code",[t._v("yield")]),t._v("命令，可以暂时把它理解为'暂停'。")]),t._v(" "),n("p",[t._v("然后我执行下面的命令:")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("b")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("ol",[n("li",[t._v("在上面的代码中，执行了"),n("code",[t._v("let c = a()")]),t._v("，这个操作的意义在于构造了一个迭代器 c，这个迭代器会控制生成器*a 中代码的执行。")]),t._v(" "),n("li",[t._v("第一个"),n("code",[t._v("c.next()")]),t._v("使得生成器"),n("code",[t._v("*a")]),t._v("正式开始执行，它运行了生成器中第一行代码"),n("code",[t._v("x ++")]),t._v("。")]),t._v(" "),n("li",[t._v("接下来执行"),n("code",[t._v("yield")]),t._v("，这个时候生成器暂停了，也就是说第一个"),n("code",[t._v("c.next()")]),t._v("命令已经执行结束，这时候 "),n("code",[t._v("*a")]),t._v("仍然处于运行状态，只不过它暂停了而已。")]),t._v(" "),n("li",[t._v("此时控制台输出"),n("code",[t._v("x = 2")]),t._v("。")]),t._v(" "),n("li",[t._v("调用函数 b 使得"),n("code",[t._v("x ++")]),t._v("。")]),t._v(" "),n("li",[t._v("第二个"),n("code",[t._v("c.next()")]),t._v("继续执行下面的命令，控制台输出"),n("code",[t._v("x = 3")]),t._v("。")])]),t._v(" "),n("p",[t._v("这样，整个函数就算是执行完毕了，当然，如果后面的代码中还有"),n("code",[t._v("yield")]),t._v("，那么需要执行第三个"),n("code",[t._v("c.next()")]),t._v("才能执行完整个函数。"),n("br"),t._v("\n生成器达到了不需要在函数内调用 b，就可以得到"),n("code",[t._v("x = 3")]),t._v("的效果，它可以一次或者多次的进行停止，这取决于"),n("code",[t._v("yield")]),t._v("的数量。")]),t._v(" "),n("p",[t._v("Generator 函数和普通函数一样可以接收参数，但就像上面的例子一样，Generator 并没有像普通函数一样运行。")]),t._v(" "),n("p",[n("code",[t._v("next()")]),t._v("看上去像是执行两个"),n("code",[t._v("yield")]),t._v("之间的操作(如果有上一个"),n("code",[t._v("yield")]),t._v("和下一个"),n("code",[t._v("yield")]),t._v("的话)，但实际上它也需要完成上一个被暂停的"),n("code",[t._v("yield")]),t._v("表达式。")]),t._v(" "),n("p",[t._v("看下面的例子：")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("p",[t._v("同样是创建了一个生成器 a，构造了一个迭代器 b，不同的是"),n("code",[t._v("yield")]),t._v("表达式写在了执行语句之内。")]),t._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//12")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br")])]),n("p",[t._v("第一个"),n("code",[t._v("next")]),t._v("执行"),n("code",[t._v("yield")]),t._v("之前的语句，直到"),n("code",[t._v("yield")]),t._v("暂停，第二个"),n("code",[t._v("next")]),t._v("将 6 传给正在等待的"),n("code",[t._v("yield")]),t._v("，这样 6 就被传入了生成器，最后控制台输出"),n("code",[t._v("y = 12")]),t._v("。")]),t._v(" "),n("p",[t._v("现在有一个问题，为什么"),n("code",[t._v("next")]),t._v("执行的次数要比"),n("code",[t._v("yield")]),t._v("多一次呢？"),n("br"),t._v("\n因为第一个"),n("code",[t._v("next")]),t._v("总是启动一个生成器，并运行到第一个"),n("code",[t._v("yield")]),t._v("处，而第二个"),n("code",[t._v("next")]),t._v("总是调用完成第一个被暂停的"),n("code",[t._v("yield")]),t._v("表达式，第三个"),n("code",[t._v("next")]),t._v("完成第二个"),n("code",[t._v("yield")]),t._v("..."),n("br"),t._v("\n什么意思呢？"),n("br"),t._v(" "),n("code",[t._v("next")]),t._v("方法会返回一个对象，这个对象的"),n("code",[t._v("value")]),t._v("属性就是当前"),n("code",[t._v("yield")]),t._v("表达式的值，也就是当前内部状态值，对象还有一个属性是"),n("code",[t._v("done")]),t._v("，表示迭代是否结束。上述代码在执行第一个"),n("code",[t._v("next")]),t._v("的时候就返回了一个对象：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.loli.net/2019/03/19/5c90980fe374b.jpg",alt:"截图未命名.jpg"}})]),t._v(" "),n("p",[t._v("这个时候因为"),n("code",[t._v("yield")]),t._v("没有值，所以是"),n("code",[t._v("undefined")]),t._v("。")]),t._v(" "),n("p",[t._v("执行第二个"),n("code",[t._v("next")]),t._v("的时候：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.loli.net/2019/03/19/5c9098b18c1c9.jpg",alt:"截图未命名.jpg"}})]),t._v(" "),n("p",[t._v("还是"),n("code",[t._v("undefined")]),t._v(",因为现在"),n("code",[t._v("value")]),t._v("并不是第一个"),n("code",[t._v("yield")]),t._v("的值了，那是什么值呢？"),n("br"),t._v("\n把"),n("code",[t._v("console.log(y)")]),t._v("改成"),n("code",[t._v("return(y)")]),t._v("试试：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://i.loli.net/2019/03/19/5c90999320af7.jpg",alt:"截图未命名.jpg"}})]),t._v(" "),n("p",[t._v("原来最后一个"),n("code",[t._v("next")]),t._v("返回的对象"),n("code",[t._v("value")]),t._v("值是最后"),n("code",[t._v("return")]),t._v("的值，如果生成器中没有"),n("code",[t._v("return")]),t._v("，那么会自动生成一个隐式的"),n("code",[t._v("return")]),t._v("返回"),n("code",[t._v("undefined")]),t._v("，这样就能解释"),n("code",[t._v("next")]),t._v("比"),n("code",[t._v("yield")]),t._v("多一个的原因了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);